action (UpdateOrder) {
  description (Update order)
  type (UpdateTransaction)
  collect {
    input (order) {
      type (Order)
      min (Required)
      hidden
    }
    input (promptFlag) {
      type (PromptFlag)
      hidden
    }
    input(numberOfAstronauts) {
      type(NumberOfAstronauts)
      hidden
      default-init {
        intent {
          goal: NumberOfAstronauts
          value: $expr(order.habitatPod.numberOfAstronauts)
        }
      }
    }
    input (dateTimeExpression) {
      type (time.DateTimeExpression)
      hidden
      default-init {
        intent {
          goal: time.DateTimeExpression
          value: $expr(order.habitatPod.dateInterval)
        }
      }
    }
    input (self) {
      type (self.SelfInfo)
      hidden
      default-init {
        intent {
          goal: self.GetSelfInfo
          value: $expr(order.self)
        }
      }
    }
    computed-input(newNumberOfAstronauts) {
      type (NumberOfAstronauts)
      hidden
      compute {
        if ("promptFlag == 'NumberOfAstronauts'") {
         intent {
           goal-set {
             @prompt-behavior(AlwaysSelection)
             NumberOfAstronauts {
               NumberOfAstronauts(1) NumberOfAstronauts(2) NumberOfAstronauts(3) NumberOfAstronauts(4)
             }
           }
         }
        } else {
          intent {
            goal: NumberOfAstronauts
            value: $expr(numberOfAstronauts)
          }
        }
      }
    }
    
    computed-input(newDateTimeExpression) {
      type (time.DateTimeExpression)
      hidden
      compute {
        if ("promptFlag == 'DateInterval'") {
          // Prompt
          intent {
            goal { @prompt-behavior(AlwaysElicitation) time.DateInterval }
          }
        } else {
          intent {
            goal: time.DateTimeExpression
            value: $expr(dateTimeExpression)
          }
        }
      }
    }
    
    computed-input (newSelf) {
      type (self.SelfInfo)
      compute {
        if ("promptFlag == 'Self'") {
          // Prompt
          intent {
            goal { self.GetSelfInfo }
            value: $expr(self)
            value: self.ForcePrompt(true)
            value-set: self.RequiredField {
              self.RequiredField(firstName)
              self.RequiredField(lastName)
              self.RequiredField(emailAddress)
              self.RequiredField(phoneNumber)
            }            
          }
        } else {
          intent {
            goal: $expr(self)
          }
        }
      }
     
    }
    computed-input (newHabitatPod) {
      type (HabitatPod)
      min (Required) max(One)
      compute {
        // We might want to optimize to only SelectHabitatPod when numberOfAstronauts or dateTimeExpression is changed
        // However maybe better idea to always check if the HabitatPod is still available for reservation
        intent {
          goal: SelectHabitatPod
          subplan {
            goal: FindHabitatPods
            value: $expr (newNumberOfAstronauts)
            value: $expr (newDateTimeExpression)
            value: $expr (order.habitatPod.spaceResort)
          }
          if (promptFlag != 'HabitatPod') {
            value: $expr (order.habitatPod.name)
          }
        }
      }
    }
  }
  output (Order)
}