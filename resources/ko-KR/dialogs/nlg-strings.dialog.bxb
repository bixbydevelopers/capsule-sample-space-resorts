template-macro-def (RECEIPT_ACTIVITY_CARD_MESSAGE) {
  params {
    param (receipt) {
      type (Receipt)
      min (Required) max (One)
    }
  }
  content {
    template ("우주복은 준비 되었나요? 여행이 곧 시작됩니다!")
  }
}

template-macro-def (RECEIPT_ACTIVITY_CARD_DETAILS) {
  params {
    param (receipt) {
      type (Receipt)
      min (Required) max (One)
    }
  }
  content {
    if (receipt.canceled) {
      template ("예약 취소")
    } else {
      template("#{value(receipt.item.numberOfAstronauts)} 명 예약")
    }
  }
}

template-macro-def (RECEIPT_RESULT) {
  params {
    param (receipt) {
      type (Receipt)
      min (Required) max (One)
    }
  }
  content {
    if ("exists(receipt.canceled) && receipt.canceled == true") {
      template ("여행이 취소되었습니다.")
    } else {
      if(exists(receipt.item.spaceResort)){
        template ("#{value(receipt.item.spaceResort)}에서 즐거운 여행되시길 바랍니다.")
      }
      //Else Unexpected
    }
  }
}

template-macro-def (SPACE_RESORT_SELECTION) {
  content {
    template ("어떤 리조트를 원하시나요?")
  }
}

template-macro-def (NUMBER_OF_ASTRONAUTS_SELECTION) {
  content {
    template ("우주 여행객 수가 몇명인가요?")
  }
}

template-macro-def (HABITAT_POD_SELECTION) {
  content {
    template ("원하시는 패키지를 선택해주세요.")
  }
}

template-macro-def (DATE_INTERVAL_ELICITATION) {
  content {
    template ("언제 방문하고 싶으신가요?")
  }
}

template-macro-def (COMMIT_ORDER_CONFIRMATION) {
  content {
    template ("이 여행을 예약하시겠습니까?")
  }
}

template-macro-def (COMMIT_ORDER_CONFIRMATION_LONG) {
  params {
    param (action) {
      type (CommitOrder)
      min (Required) max (One)
    }
  }
  content {
    template ("Alright, I am ready to place your order[ for #{value(action.order.item.numberOfAstronauts)}][ in #{value(action.order.item.pod.name)}][ at #{value(action.order.item.spaceResort)}][ on #{value(action.order.item.spaceResort.planet)}][ #{input(action.order.item.dateInterval)}].[ The total cost is #{value(action.order.item.pod.price)}][ and your email is #{value(action.order.buyer.emailInfo.address)}]. Would you like me to proceed?") // TODO: translate
  }
}

template-macro-def (SPACE_RESORT_RESULT) {
  params {
    param (result) {
      type (SpaceResort)
      min (Required) max (One)
    }
  }
  content {
    if (size(result) == 1) {
      template ("#{concept(result)}를 찾았습니다.")
    } else {
      template ("#{concept(result)}들을 찾았습니다.")
    }
  }
}

template-macro-def (SPACE_RESORT_NAME_WITH_EMPHASIS) {
  params {
    param (spaceResort) {
      type (SpaceResort)
      min (Required) max (One)
    }
  }
  content {
    choose (Random) {
      // TODO: Remove the ".name" part when VIV-25705 is ready
      template ("#{value(spaceResort.name)} is great.")
      template ("#{value(spaceResort.name)} sounds fun.")
      template ("#{value(spaceResort.name)} is good.")
      template ("#{value(spaceResort.name)} is lovely.")
      template ("You'll love #{value(spaceResort.name)}.")
      template ("You'll enjoy #{value(spaceResort.name)}.")
    }
  }
}

template-macro-def (SPACE_RESORT_SUMMARY) {
  params {
    param (spaceResort) {
      type (SpaceResort)
      min (Required) max (One)
    }
  }
  content {
    template ("#{value(spaceResort)} attributes are #{value(spaceResort.attributes)}")
  }
}

template-macro-def (SPACE_RESORT_DETAILS) {
  params {
    param (spaceResort) {
      type (SpaceResort)
      min (Required) max (One)
    }
  }
  content {
    template ("#{value(spaceResort.description)}")
  }
}

template-macro-def (SPACE_RESORT_HIGHLIGHT) {
  params {
    param (spaceResort) {
      type (SpaceResort)
      min (Required) max (One)
    }
    param (byPreferences) {
      type (core.Boolean)
      min (Required) max (One) default (false)
    }
  }
  content {
    if (byPreferences) {
      template ("Based on your preferences, you may enjoy #{value(spaceResort)}")
    } else {
      template ("#{value(spaceResort.highlight.dialog)}")
    }
  }
}

template-macro-def (UNDERFLOW_STATEMENT) {
  content {
    template ("This is the first option.")
  }
}

template-macro-def (OVERFLOW_STATEMENT) {
  content {
    template ("That's all I have.")
  }
}

template-macro-def (READ_ONE_ITEM_SELECTION_QUESTION) {
  content {
    choose (Random) {
      template ("Want to pick this one?")
      template ("Does that sound good?")
      template ("Would you like this one?")
    }
  }
}

template-macro-def (READ_MANY_ITEM_SELECTION_QUESTION) {
  content {
    template ("Which one would you like?")
  }
}

template-macro-def (HIGHLIGHT_LABEL_BY_PREFERENCES) {
  content {
    template ("Based on your preferences")
  }
}

// Exception handling
template-macro-def (UNSUPPORTED_SEARCH_OPTION) {
  content {
    template ("지원하지 않는 검색 옵션입니다.")
  }
}

template-macro-def (UNKNOWN_ERROR) {
  content {
    template ("문제가 발생했습니다.")
  }
}

template-macro-def (HABITAT_POD_SUMMARY) {
  params {
    param (habitatPod) {
      type (HabitatPod)
      min (Required) max (One)
    }
  }
  content {
    template ("#{value(habitatPod.name)} costs #{value(habitatPod.price)}. #{value(habitatPod.highlight.dialog)}") // TODO: translate
  }
}

template-macro-def (GRAVITY_FROM_SPACE_RESORT_RESULT) {
  params {
    param (spaceResort) {
      type (SpaceResort)
      min (Required) max (One)
    }
  }
  content {
    template ("중력은 #{value(spaceResort.gravity)}입니다.")
  }
}

template-macro-def (PLANET_FROM_SPACE_RESORT_RESULT) {
  params {
    param (spaceResort) {
      type (SpaceResort)
      min (Required) max (One)
    }
  }
  content {
    template ("#{input(spaceResort.planet)} 있습니다.") 
  }
}

template-macro-def (NEXT_ITEM_QUESTION) {
  content {
    template ("Would you like to hear the next one?") // TODO: translate
  }
}

template-macro-def (MAKE_RESERVATION_FOLLOWUP_PROMPT) {
  content {
    template ("Would you like to make a reservation?") // TODO: translate
  }
}